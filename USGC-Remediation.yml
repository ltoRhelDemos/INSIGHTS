---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# USGC-remediation
# https://cloud.redhat.com/insights/remediations/e1f90a36-316d-4110-8bcd-1ce5c70a08da
# Generated by Red Hat Insights on Tue, 28 Jul 2020 15:32:54 GMT
# Created by adirgan

# Disable SSH Support for User Known Hosts
# Identifier: (ssg:rhel7|content_profile_ospp|xccdf_org.ssgproject.content_rule_sshd_disable_user_known_hosts,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable SSH Support for User Known Hosts
  hosts: 'turing'
  become: true
  tags:
    - CCE-80372-6
    - DISA-STIG-RHEL-07-040380
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_user_known_hosts
  tasks:
    - name: Disable SSH Support for User Known Hosts
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*IgnoreUserKnownHosts\s+
            state: absent
          notify: insights_reboot_handler
        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: IgnoreUserKnownHosts yes
            state: present
            insertbefore: '^[#\s]*Match'
            validate: /usr/sbin/sshd -t -f %s
          notify: insights_reboot_handler
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: "turing"
  become: True
  gather_facts: False
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}"
            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"
            delay: 15
            search_regex: OpenSSH
            timeout: 300
          become: false

- name: run insights
  hosts: "turing"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false
